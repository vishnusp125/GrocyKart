<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
	integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

<div class="container">
	<div class="py-5 text-center">

		<h1 class="mx-5 my-5" style="color:orangered;">Checkout</h1>
	</div>
	<div class="row">
		<div class="col-md-4 order-md-2 mb-4">
			<h4 class="d-flex justify-content-between align-items-center mb-3">
				<span class="text-muted">Your cart</span>
				<!-- <span class="badge badge-secondary badge-pill">3</span> -->
			</h4>
			<ul class="list-group mb-3">
				<li class="list-group-item d-flex justify-content-between lh-condensed">
					<div>
						<h6 class="my-0">Cart total</h6>
						<small class="text-muted">Brief description</small>
					</div>
					<span class="text-muted">Rs. <%= totals%></span>
				</li>

				<li class="list-group-item d-flex justify-content-between bg-light">
					<div class="text-success">
						<h6 class="my-0">Promo code</h6>
						<!-- <small>EXAMPLECODE</small> -->
					</div>
					<span id="p2" class="text-success">-Rs.0</span>
				</li>
				<li class="list-group-item d-flex justify-content-between">
					<span>Total (Rs)</span>
					<strong id="p1"></strong>
				</li>
			</ul>

			<form class="card p-2" id="couponform">
				<div class="input-group">
					<select class="form-select" name="coupon" aria-label="Default select example">
						<option selected disabled>Choose...</option>
						<%coupon.forEach(function(coupon){%>
							<option value="<%=coupon.couponCode%>">
								<%=coupon.couponCode%>
							</option>
							<%})%>
					</select>
					<div class="input-group-append">
						<input type="hidden" class="form-control" name="amount" value="<%=totals %>">

						<button type="submit" class="btn btn-success">Redeem</button>
					</div>

				</div>
				<h5 class="text-success text-center" id="success"></h5>
			</form>

		</div>
		<div class="col-md-8 order-md-1">
			<h4 class="mb-3">Billing address</h4>
			<form id="form" class="needs-validation" name="myForm">

				<div class="mb-3">
					<label for="name">Name</label>
					<div class="input-group">
						<input type="text" class="form-control" name="name" placeholder="Username"
							value="<%=profile.username%>">
					</div>
				</div>

				<div class="mb-3">
					<label for="email">Email <span class="text-muted"></span></label>
					<input type="email" class="form-control" name="email" value="<%=profile.email%>"
						placeholder="you@example.com">
					<!-- <div class="invalid-feedback">
			  Please enter a valid email address for shipping updates.
			</div> -->

				</div>
				<div class="mb-3">
					<label for="email">Phone Number <span class="text-muted"></span></label>
					<input type="text" class="form-control" value="<%=profile.phoneNo%>" name="phoneNo"
						placeholder="123...">
					<div class="invalid-feedback">
						Please enter a valid phone number for shipping updates.
					</div>
				</div>


				<div class="mb-3">


					<div class="mb-3">
						<label for="address">Address Select</label>
						<select class="form-select" name="addressOption" aria-label="Default select example">
							<option value="" selected>Select an address</option>
							<% for(let i=0;i<profile.address.length ;i++){ %>

								<option value="<%=profile.address[i].address %>">
									<%= profile.address[i].address %>
								</option>
								<% } %>
						</select>
					</div>


					<label for="address">Add New Address</label>
					<input type="text" class="form-control" name="address" value="" placeholder="1234 Main St">
					<div class="invalid-feedback">
						Please enter your shipping address.
					</div>
				</div>
				<div class="row">
					<div class="col-md-5 mb-3">
						<label for="country">Country</label>
						<input type="text" class="form-control" name="country" value="" placeholder="" required>
						<div class="invalid-feedback">
							Please select a valid country.
						</div>
					</div>
					<div class="col-md-4 mb-3">
						<label for="state">State</label>

						<input type="text" class="form-control" name="state" value="" placeholder="" required>
						<div class="invalid-feedback">
							Please provide a valid state.
						</div>
					</div>
					<div class="col-md-3 mb-3">
						<label for="zip">Zip</label>
						<input type="text" class="form-control" name="zip" value="" placeholder="" required>
						<div class="invalid-feedback">
							Zip code required.
						</div>
					</div>

					<input type="hidden" id="newTotal" class="form-control" name="discountedTotal" value="0">
					<input type="hidden" class="form-control" name="amount" value="<%= totals %>">
					<input type="hidden" class="form-control" name="currency" value="INR">
				</div>
				<hr class="mb-4">
				<h4 class="mb-3">Payment</h4>
				<select class="form-select" name="payment" aria-label="Default select example">
					<option value="COD">Cash On Delivery</option>
					<option value="Razorpay">Razorpay</option>
					<option value="Paypal">PayPal</option>



				</select>
				<hr class="mb-4">
				<button class="btn btn-success btn-lg btn-block" type="submit">Continue</button>
			</form>
		</div>
	</div>
	<br>
</div>
<script src="https://www.paypal.com/sdk/js?client-id=test&currency=USD"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
	const couponform = document.querySelector('#couponform')


	couponform.addEventListener('submit', async (e) => {
		e.preventDefault();

		console.log(newTotal);

		const couponCode = couponform.coupon.value;
		const total = couponform.amount.value;

		console.log(couponCode);
		console.log(total);

		try {
			let coupon = await fetch('/applyCoupon', {
				method: 'post',
				body: JSON.stringify({ couponCode, total }),
				headers: { 'Content-Type': 'application/json' }
			});
			console.log('coupon applied');
			coupon = await coupon.json();
			console.log(coupon);
			oldtotal = coupon.total
			const newTotal = coupon.discountedTotal
			const couponVal = coupon.couponValue
			console.log(newTotal);
			console.log(couponVal);
			if (coupon.msg == 'Already used this coupon') {
				document.getElementById('success').innerHTML = "Already Applied"
				document.getElementById("p1").innerHTML = total;
			} else if (coupon.msg == 'Purchase amount is not enough') {
				document.getElementById('success').innerHTML = "Amount is not enough"
				document.getElementById("p1").innerHTML = total;
			} else {
				document.getElementById("p1").innerHTML = "Rs." + newTotal;
				document.getElementById("p2").innerHTML = "Rs." + couponVal;
				document.getElementById("newTotal").value = newTotal;
				document.getElementById('success').innerHTML = "Coupon Applied !!!!";
			}

		} catch (err) {
			console.log(err);
		}
	})




	const form = document.querySelector('#form')

	form.addEventListener('submit', async (e) => {
		e.preventDefault()
		console.log(11111);
		const name = form.name.value
		const email = form.email.value
		const phoneNo = form.phoneNo.value
		const address = form.address.value
		// addressOption function (addressopt = "") {
		// 	return addressopt= form.addressOption.value;		
		// }
		// const addressopt = addressOption();
		const addressopt = form.addressOption.value;
		console.log(addressopt)
		const country = form.country.value
		const state = form.state.value
		const zip = form.zip.value
		const payment = form.payment.value
		const currency = form.currency.value
		const amount = form.amount.value
		const discountedTotal = form.discountedTotal.value;

		console.log(discountedTotal);
		console.log(amount);
		console.log(country);
		console.log(currency);
		console.log(payment);
		// console.log(addressopt);



		try {
			let order = await fetch('/checkout', {
				method: 'post',
				body: JSON.stringify({ name, email, phoneNo, address, addressopt, state, country, zip, payment, currency, amount, discountedTotal }),
				headers: { 'Content-Type': 'application/json' }

			})


			order = await order.json()
			// console.log(order);

			if (order.success) {

				location.assign('/ordersuccess')

			} else if (order.id === 'Paypal') {
				console.log('in paypalllll');

				paypal.Buttons({
					// Order is created on the server and the order id is returned
					createOrder: (data, actions) => {
						return fetch('/paymentPaypal', {
							method: "post",
							headers: {
								'Content-Type': 'application/json',
							},
							body: JSON.stringify({ amount, currency, address, payment, order }),
							// use the "body" param to optionally pass additional order information
							// like product ids or amount
						})
							.then((response) => response.json())

							.then((order) => order.id);
						console.log(order);
						console.log(order.id);
						// console.log('orderid');
					},

					// Finalize the transaction on the server after payer approval
					onApprove: (data, actions) => {
						console.log('on approve and finalise on the server');
						console.log(data.orderID);
						return fetch(`/verifyPaymentPaypal/${data.orderID}/capture`, {
							method: "post",
						})
							.then((response) => response.json())
							.then((orderData) => {
								// Successful capture! For dev/demo purposes:
								console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));

								const transaction = orderData.purchase_units[0].payments.captures[0];
								alert(`Transaction ${transaction.status}: ${transaction.id}\n\nSee console for all available details`);
								// When ready to go live, remove the alert and show a success message within this page. For example:
								// const element = document.getElementById('paypal-button-container');
								// element.innerHTML = '<h3>Thank you for your payment!</h3>';
								// Or go to another URL:  actions.redirect('thank_you.html');
								async function g() {
									if (transaction.id) {
										const saveRes = await fetch('/saveOrder', {
											method: 'GET', // or 'PUT'
											headers: {
												'Content-Type': 'application/json',
											},
										})

										console.log(saveRes + "saveRes")
										if (saveRes) {
											window.location.href = ("/ordersuccess");
										}
									}
								}
								g();
							});
					}
				}).render('#paypal-button-container');

			}

			else if (order.id) {
				// console.log(order);

				const options = {
					"key": "rzp_test_BBlNJOeGGPkzYf",
					"amount": order.amount,
					"currency": "INR",
					"name": "Grocy Kart",
					"description": "Test",
					"order_id": order.id, //sample orderid
					"handler": async function (response) {
						console.log(response)
						const res = await fetch('/verifyPaymentRazorPay', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
							},
							body: JSON.stringify(response),

						})
						console.log(11111111);
						console.log(res + "res");

						if (res) {

							const saveRes = await fetch('/saveorder', {
								method: 'GET',
								headers: {
									'Content-Type': 'application/json'
								},
							})
							console.log(2222222222);

							console.log(saveRes + "saveRes");
							if (saveRes) {
								console.log('completed');
								location.assign('/ordersuccess')
							}
						}
					},
					"prefill": {
						"name": "Gaurav Kumar",
						"email": "gaurav.kumar@example.com",
						"contact": "9999999999"
					},
					"notes": {
						"address": "Razorpay Corporate Office"
					},
					"theme": {
						"color": "#3399cc"
					}
				}
				var rzp1 = new Razorpay(options);
				rzp1.on('payment.failed', function (response) {
					alert(response.error.code);
					alert(response.error.description);
					alert(response.error.source);
					alert(response.error.step);
					alert(response.error.reason);
					alert(response.error.metadata.order_id);
					alert(response.error.metadata.payment_id);
				});
				rzp1.open()
			}




		} catch (err) {
			console.log(err);
		}

	})



</script>

<div id="paypal-button-container"></div>